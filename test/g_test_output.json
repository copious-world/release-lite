{
  "running": {
    "otw": {
      "goal_facts": [
        "running(nginx)",
        "running(human-page-queue)",
        "on_reboot([nginx,human-page-queue])",
        "schedule(certbot,60000)"
      ],
      "subgoals": {
        "running(nginx)": {
          "var_evals": {
            "Y": "default"
          },
          "var_producer": "(*,*(Y))|(*)=> Y = default | (*,Y)",
          "all_ready": false,
          "real_goal": "running(nginx)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "apt_op(install nginx)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "apt_op(install nginx)"
                }
              }
            },
            "post(.conf:Y)": {
              "var_evals": {},
              "var_consume": {
                "Y": {
                  "type": "file-type",
                  "check": ".conf"
                }
              },
              "var_producer": false,
              "real_goal": "post(.conf:Y)",
              "subgoals": {
                "uploaded(/etc/nginx/sites-enabled, /Y/? of-this.world.conf | default -> Z )": {
                  "var_producer": {
                    "Z": {
                      "index": 2,
                      "selections": [
                        "${host.host}.conf",
                        "default"
                      ],
                      "producer": {
                        "source": "Y"
                      }
                    }
                  },
                  "var_consume": {
                    "${host.host}": {
                      "type": "def-table",
                      "value": "?"
                    }
                  },
                  "real_goal": "uploaded(/etc/nginx/sites-enabled, /Y/? of-this.world.conf | default -> Z )",
                  "subgoals": {
                    "uploaded:Z=default": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "default",
                          "goal_op": "uploaded"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=default",
                      "subgoals": {
                        "compositing(default)": {
                          "var_producer": false,
                          "real_goal": "compositing(default)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,default)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,default)"
                            }
                          }
                        }
                      }
                    },
                    "uploaded:Z=of-this.world.conf": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "${host.host}.conf",
                          "goal_op": "uploaded"
                        },
                        "${host.host}": {
                          "type": "def-table",
                          "value": "?"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=of-this.world.conf",
                      "subgoals": {
                        "compositing(of-this.world.conf)": {
                          "var_producer": false,
                          "var_consume": {
                            "${host.host}": {
                              "type": "def-table",
                              "value": "?"
                            }
                          },
                          "real_goal": "compositing(of-this.world.conf)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,of-this.world)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,of-this.world)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nginx_op(-s reload)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "nginx_op(-s reload)"
                }
              }
            }
          }
        },
        "running(human-page-queue)": {
          "var_evals": {
            "X": "human-page-queue"
          },
          "var_producer": "X",
          "all_ready": false,
          "real_goal": "running(human-page-queue)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "npm_target(global:of-this-world)": {
                  "var_producer": false,
                  "real_goal": "npm_target(global:of-this-world)",
                  "subgoals": {
                    "installed(nodejs)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(nodejs)"
                    },
                    "installed(npm)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(npm)"
                    }
                  }
                }
              }
            },
            "post(.conf:X)": {
              "var_evals": {
                "X": {
                  "type": "param",
                  "value": "human-page-queue"
                }
              },
              "var_consume": {
                "X": {
                  "type": "file-type",
                  "check": ".conf",
                  "input": "human-page-queue"
                }
              },
              "var_producer": false,
              "real_goal": "post(.conf:X)",
              "subgoals": {
                "dirs(human-page-queue)": {
                  "var_producer": false,
                  "var_consume": {
                    "X": {
                      "type": "value",
                      "value": "?",
                      "input": {
                        "type": "param",
                        "value": "human-page-queue"
                      }
                    }
                  },
                  "real_goal": "dirs(human-page-queue)",
                  "var_evals": {
                    "X": {
                      "type": "param",
                      "value": {
                        "type": "param",
                        "value": "human-page-queue"
                      }
                    }
                  },
                  "subgoals": {
                    "dirs:X=human-page-queue": {
                      "var_evals": {
                        "X": {
                          "type": "param",
                          "value": {
                            "type": "param",
                            "value": {
                              "type": "param",
                              "value": "human-page-queue"
                            }
                          }
                        }
                      },
                      "subs": "one-line",
                      "var_consume": {
                        "X": {
                          "type": "path-select",
                          "value": "human-page-queue",
                          "goal_op": "dirs",
                          "input": {
                            "type": "param",
                            "value": {
                              "type": "param",
                              "value": "human-page-queue"
                            }
                          }
                        }
                      },
                      "var_producer": false,
                      "p_list": [
                        "~/deposit",
                        "~/media",
                        "/var/www/html/people"
                      ],
                      "live_path": true,
                      "real_goal": "dirs:X=human-page-queue"
                    }
                  }
                },
                "uploaded(~/, human-page-queue.conf )": {
                  "var_producer": false,
                  "subs": "terminus",
                  "var_consume": {
                    "X": {
                      "type": "value",
                      "value": "?",
                      "input": {
                        "type": "param",
                        "value": "human-page-queue"
                      }
                    }
                  },
                  "real_goal": "uploaded(~/, human-page-queue.conf )",
                  "var_evals": {
                    "X": {
                      "type": "param",
                      "value": {
                        "type": "param",
                        "value": "human-page-queue"
                      }
                    }
                  }
                },
                "bash_op(~/,human-page-queue)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "var_consume": {
                    "X": {
                      "type": "value",
                      "value": "?",
                      "input": {
                        "type": "param",
                        "value": "human-page-queue"
                      }
                    }
                  },
                  "real_goal": "bash_op(~/,human-page-queue)",
                  "var_evals": {
                    "X": {
                      "type": "param",
                      "value": {
                        "type": "param",
                        "value": "human-page-queue"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "on_reboot([nginx,human-page-queue])": {
          "all_ready": false,
          "real_goal": "on_reboot([nginx,human-page-queue])"
        },
        "schedule(certbot,60000)": {
          "all_ready": false,
          "real_goal": "schedule(certbot,60000)"
        }
      },
      "all_ready": false
    },
    "copious": {
      "goal_facts": [
        "running(nginx,config(copious.world))"
      ],
      "subgoals": {
        "running(nginx,config(copious.world))": {
          "var_evals": {
            "Y": "copious.world"
          },
          "var_producer": "(*,*(Y))|(*)=> Y = default | (*,Y)",
          "all_ready": false,
          "real_goal": "running(nginx,config(copious.world))",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "apt_op(install nginx)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "apt_op(install nginx)"
                }
              }
            },
            "post(.conf:Y)": {
              "var_evals": {},
              "var_consume": {
                "Y": {
                  "type": "file-type",
                  "check": ".conf"
                }
              },
              "var_producer": false,
              "real_goal": "post(.conf:Y)",
              "subgoals": {
                "uploaded(/etc/nginx/sites-enabled, /Y/? copious.world.conf | default -> Z )": {
                  "var_producer": {
                    "Z": {
                      "index": 2,
                      "selections": [
                        "${host.host}.conf",
                        "default"
                      ],
                      "producer": {
                        "source": "Y"
                      }
                    }
                  },
                  "var_consume": {
                    "${host.host}": {
                      "type": "def-table",
                      "value": "?"
                    }
                  },
                  "real_goal": "uploaded(/etc/nginx/sites-enabled, /Y/? copious.world.conf | default -> Z )",
                  "subgoals": {
                    "uploaded:Z=default": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "default",
                          "goal_op": "uploaded"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=default",
                      "subgoals": {
                        "compositing(default)": {
                          "var_producer": false,
                          "real_goal": "compositing(default)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,default)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,default)"
                            }
                          }
                        }
                      }
                    },
                    "uploaded:Z=copious.world.conf": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "${host.host}.conf",
                          "goal_op": "uploaded"
                        },
                        "${host.host}": {
                          "type": "def-table",
                          "value": "?"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=copious.world.conf",
                      "subgoals": {
                        "compositing(copious.world.conf)": {
                          "var_producer": false,
                          "var_consume": {
                            "${host.host}": {
                              "type": "def-table",
                              "value": "?"
                            }
                          },
                          "real_goal": "compositing(copious.world.conf)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,copious.world)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,copious.world)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nginx_op(-s reload)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "nginx_op(-s reload)"
                }
              }
            }
          }
        }
      },
      "all_ready": false
    },
    "popsong": {
      "goal_facts": [
        "running(nginx,popsongnow.com)"
      ],
      "subgoals": {
        "running(nginx,popsongnow.com)": {
          "var_evals": {
            "Y": "popsongnow.com"
          },
          "var_producer": "(*,*(Y))|(*)=> Y = default | (*,Y)",
          "all_ready": false,
          "real_goal": "running(nginx,popsongnow.com)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "apt_op(install nginx)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "apt_op(install nginx)"
                }
              }
            },
            "post(.conf:Y)": {
              "var_evals": {},
              "var_consume": {
                "Y": {
                  "type": "file-type",
                  "check": ".conf"
                }
              },
              "var_producer": false,
              "real_goal": "post(.conf:Y)",
              "subgoals": {
                "uploaded(/etc/nginx/sites-enabled, /Y/? popsongnow.com.conf | default -> Z )": {
                  "var_producer": {
                    "Z": {
                      "index": 2,
                      "selections": [
                        "${host.host}.conf",
                        "default"
                      ],
                      "producer": {
                        "source": "Y"
                      }
                    }
                  },
                  "var_consume": {
                    "${host.host}": {
                      "type": "def-table",
                      "value": "?"
                    }
                  },
                  "real_goal": "uploaded(/etc/nginx/sites-enabled, /Y/? popsongnow.com.conf | default -> Z )",
                  "subgoals": {
                    "uploaded:Z=default": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "default",
                          "goal_op": "uploaded"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=default",
                      "subgoals": {
                        "compositing(default)": {
                          "var_producer": false,
                          "real_goal": "compositing(default)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,default)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,default)"
                            }
                          }
                        }
                      }
                    },
                    "uploaded:Z=popsongnow.com.conf": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "${host.host}.conf",
                          "goal_op": "uploaded"
                        },
                        "${host.host}": {
                          "type": "def-table",
                          "value": "?"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=popsongnow.com.conf",
                      "subgoals": {
                        "compositing(popsongnow.com.conf)": {
                          "var_producer": false,
                          "var_consume": {
                            "${host.host}": {
                              "type": "def-table",
                              "value": "?"
                            }
                          },
                          "real_goal": "compositing(popsongnow.com.conf)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,popsongnow.com)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,popsongnow.com)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nginx_op(-s reload)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "nginx_op(-s reload)"
                }
              }
            }
          }
        }
      },
      "all_ready": false
    },
    "home": {
      "goal_facts": [
        "running(nginx)",
        "running(transition:song_catcher)"
      ],
      "subgoals": {
        "running(nginx)": {
          "var_evals": {
            "Y": "default"
          },
          "var_producer": "(*,*(Y))|(*)=> Y = default | (*,Y)",
          "all_ready": false,
          "real_goal": "running(nginx)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "apt_op(install nginx)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "apt_op(install nginx)"
                }
              }
            },
            "post(.conf:Y)": {
              "var_evals": {},
              "var_consume": {
                "Y": {
                  "type": "file-type",
                  "check": ".conf"
                }
              },
              "var_producer": false,
              "real_goal": "post(.conf:Y)",
              "subgoals": {
                "uploaded(/etc/nginx/sites-enabled, /Y/? @MASTER -- Mint Linux.conf | default -> Z )": {
                  "var_producer": {
                    "Z": {
                      "index": 2,
                      "selections": [
                        "${host.host}.conf",
                        "default"
                      ],
                      "producer": {
                        "source": "Y"
                      }
                    }
                  },
                  "var_consume": {
                    "${host.host}": {
                      "type": "def-table",
                      "value": "?"
                    }
                  },
                  "real_goal": "uploaded(/etc/nginx/sites-enabled, /Y/? @MASTER -- Mint Linux.conf | default -> Z )",
                  "subgoals": {
                    "uploaded:Z=default": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "default",
                          "goal_op": "uploaded"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=default",
                      "subgoals": {
                        "compositing(default)": {
                          "var_producer": false,
                          "real_goal": "compositing(default)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,default)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,default)"
                            }
                          }
                        }
                      }
                    },
                    "uploaded:Z=@MASTER -- Mint Linux.conf": {
                      "var_evals": {},
                      "var_consume": {
                        "Z": {
                          "type": "path-select",
                          "value": "${host.host}.conf",
                          "goal_op": "uploaded"
                        },
                        "${host.host}": {
                          "type": "def-table",
                          "value": "?"
                        }
                      },
                      "var_producer": false,
                      "real_goal": "uploaded:Z=@MASTER -- Mint Linux.conf",
                      "subgoals": {
                        "compositing(@MASTER -- Mint Linux.conf)": {
                          "var_producer": false,
                          "var_consume": {
                            "${host.host}": {
                              "type": "def-table",
                              "value": "?"
                            }
                          },
                          "real_goal": "compositing(@MASTER -- Mint Linux.conf)",
                          "subgoals": {
                            "roller(~/Documents/GitHub/configs/nginx,@MASTER -- Mint Linux)": {
                              "var_producer": false,
                              "subs": "terminus",
                              "var_consume": {
                                "Y": {
                                  "type": "value",
                                  "value": "?"
                                }
                              },
                              "real_goal": "roller(~/Documents/GitHub/configs/nginx,@MASTER -- Mint Linux)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nginx_op(-s reload)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "nginx_op(-s reload)"
                }
              }
            }
          }
        },
        "running(transition:song_catcher)": {
          "all_ready": false,
          "real_goal": "running(transition:song_catcher)"
        }
      },
      "all_ready": false
    },
    "g_sessions": {
      "goal_facts": [
        "running(endpoint:global_sessions)"
      ],
      "subgoals": {
        "running(endpoint:global_sessions)": {
          "all_ready": false,
          "real_goal": "running(endpoint:global_sessions)"
        }
      },
      "all_ready": false
    },
    "contacts": {
      "goal_facts": [
        "running(endpoint:contacts)"
      ],
      "subgoals": {
        "running(endpoint:contacts)": {
          "var_evals": {},
          "all_ready": false,
          "real_goal": "running(endpoint:contacts)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "npm_target(global:copious-endpoints)": {
                  "var_producer": false,
                  "real_goal": "npm_target(global:copious-endpoints)",
                  "subgoals": {
                    "installed(nodejs)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(nodejs)"
                    },
                    "installed(npm)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(npm)"
                    }
                  }
                }
              }
            },
            "post": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "post",
              "subgoals": {
                "uploaded(~/contacts,contact-service.conf)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "uploaded(~/contacts,contact-service.conf)"
                },
                "keys(contacts)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "keys(contacts)"
                },
                "bash_op(~/contacts,copious-contacts)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "bash_op(~/contacts,copious-contacts)"
                }
              }
            }
          }
        }
      },
      "all_ready": false
    },
    "endpoint-users": {
      "goal_facts": [
        "running(endpoint:contacts)"
      ],
      "subgoals": {
        "running(endpoint:contacts)": {
          "var_evals": {},
          "all_ready": false,
          "real_goal": "running(endpoint:contacts)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "npm_target(global:copious-endpoints)": {
                  "var_producer": false,
                  "real_goal": "npm_target(global:copious-endpoints)",
                  "subgoals": {
                    "installed(nodejs)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(nodejs)"
                    },
                    "installed(npm)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(npm)"
                    }
                  }
                }
              }
            },
            "post": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "post",
              "subgoals": {
                "uploaded(~/contacts,contact-service.conf)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "uploaded(~/contacts,contact-service.conf)"
                },
                "keys(contacts)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "keys(contacts)"
                },
                "bash_op(~/contacts,copious-contacts)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "real_goal": "bash_op(~/contacts,copious-contacts)"
                }
              }
            }
          }
        }
      },
      "all_ready": false
    },
    "otw-create": {
      "goal_facts": [
        "running(of-this-world)"
      ],
      "subgoals": {
        "running(of-this-world)": {
          "var_evals": {
            "X": "of-this-world"
          },
          "var_producer": "X",
          "all_ready": false,
          "real_goal": "running(of-this-world)",
          "subgoals": {
            "pre": {
              "var_evals": {},
              "var_producer": false,
              "real_goal": "pre",
              "subgoals": {
                "npm_target(global:of-this-world)": {
                  "var_producer": false,
                  "real_goal": "npm_target(global:of-this-world)",
                  "subgoals": {
                    "installed(nodejs)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(nodejs)"
                    },
                    "installed(npm)": {
                      "var_producer": false,
                      "subs": "terminus",
                      "real_goal": "installed(npm)"
                    }
                  }
                }
              }
            },
            "post(.conf:X)": {
              "var_evals": {
                "X": {
                  "type": "param",
                  "value": "of-this-world"
                }
              },
              "var_consume": {
                "X": {
                  "type": "file-type",
                  "check": ".conf",
                  "input": "of-this-world"
                }
              },
              "var_producer": false,
              "real_goal": "post(.conf:X)",
              "subgoals": {
                "dirs(of-this-world)": {
                  "var_producer": false,
                  "var_consume": {
                    "X": {
                      "type": "value",
                      "value": "?",
                      "input": {
                        "type": "param",
                        "value": "of-this-world"
                      }
                    }
                  },
                  "real_goal": "dirs(of-this-world)",
                  "var_evals": {
                    "X": {
                      "type": "param",
                      "value": {
                        "type": "param",
                        "value": "of-this-world"
                      }
                    }
                  },
                  "subgoals": {
                    "dirs:X=of-this-world": {
                      "var_evals": {
                        "X": {
                          "type": "param",
                          "value": {
                            "type": "param",
                            "value": {
                              "type": "param",
                              "value": "of-this-world"
                            }
                          }
                        }
                      },
                      "subs": "one-line",
                      "var_consume": {
                        "X": {
                          "type": "path-select",
                          "value": "of-this-world",
                          "goal_op": "dirs",
                          "input": {
                            "type": "param",
                            "value": {
                              "type": "param",
                              "value": "of-this-world"
                            }
                          }
                        }
                      },
                      "var_producer": false,
                      "p_list": [
                        "${master_stager}/humans",
                        "~/otw/templates/humans"
                      ],
                      "live_path": true,
                      "real_goal": "dirs:X=of-this-world"
                    }
                  }
                },
                "uploaded(~/, of-this-world.conf )": {
                  "var_producer": false,
                  "subs": "terminus",
                  "var_consume": {
                    "X": {
                      "type": "value",
                      "value": "?",
                      "input": {
                        "type": "param",
                        "value": "of-this-world"
                      }
                    }
                  },
                  "real_goal": "uploaded(~/, of-this-world.conf )",
                  "var_evals": {
                    "X": {
                      "type": "param",
                      "value": {
                        "type": "param",
                        "value": "of-this-world"
                      }
                    }
                  }
                },
                "bash_op(~/,of-this-world)": {
                  "var_producer": false,
                  "subs": "terminus",
                  "var_consume": {
                    "X": {
                      "type": "value",
                      "value": "?",
                      "input": {
                        "type": "param",
                        "value": "of-this-world"
                      }
                    }
                  },
                  "real_goal": "bash_op(~/,of-this-world)",
                  "var_evals": {
                    "X": {
                      "type": "param",
                      "value": {
                        "type": "param",
                        "value": "of-this-world"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "all_ready": false
    }
  }
}