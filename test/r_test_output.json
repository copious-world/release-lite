{
  "running": {
    "top_dir_location": {
      "nginx": "$[configs]/nginx",
      "www": "$[sites]",
      "configs": "configs"
    },
    "converted": "!-running(nginx,*)> -> (*,*(Y)) | (*) => Y = default | (*,Y)\n!-- pre>                    apt_op(install nginx)\n!-- post(Y:.conf)>          uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z ), nginx_op(-s reload)\n!---uploaded:Z=default>     compositing(default)\n!---uploaded:Z=${host.host}.conf> compositing(${host.host}.conf)\n!- running(human-page-queue), running(of-this-world)> -> X\n!-- pre>                      npm_target(global:of-this-world)\n!-- post(X:.conf)>            dirs(X),  uploaded(~/, ${X}.conf ), bash_op(~/,${X})\n!---dirs:X=human-page-queue>  [~/deposit,~/media,/var/www/html/people]\n!---dirs:X=of-this-world>     [ ${master_stager}/humans, ~/otw/templates/humans ]\n!- running(endpoint:contacts)>\n!-- pre>                     npm_target(global:copious-endpoints)\n!-- post>                    uploaded(~/contacts,contact-service.conf), keys(contacts), bash_op(~/contacts,copious-contacts)\n!-?npm_target(*)>           installed(nodejs),installed(npm)\n!-?compositing(*)>  -> Y    roller($[configs]/nginx,${Y})",
    "depth_table": [
      {
        "running(nginx,*)> -> (*,*(Y)) | (*) => Y = default | (*,Y)": [
          {
            "pre>                    apt_op(install nginx)": "one-line"
          },
          {
            "post(Y:.conf)>          uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z ), nginx_op(-s reload)": [
              {
                "uploaded:Z=default>     compositing(default)": "one-line"
              },
              {
                "uploaded:Z=${host.host}.conf> compositing(${host.host}.conf)": "one-line"
              }
            ]
          }
        ]
      },
      {
        "running(human-page-queue), running(of-this-world)> -> X": [
          {
            "pre>                      npm_target(global:of-this-world)": "one-line"
          },
          {
            "post(X:.conf)>            dirs(X),  uploaded(~/, ${X}.conf ), bash_op(~/,${X})": [
              {
                "dirs:X=human-page-queue>  [~/deposit,~/media,/var/www/html/people]": "one-line"
              },
              {
                "dirs:X=of-this-world>     [ ${master_stager}/humans, ~/otw/templates/humans ]": "one-line"
              }
            ]
          }
        ]
      },
      {
        "running(endpoint:contacts)>": [
          {
            "pre>                     npm_target(global:copious-endpoints)": "one-line"
          },
          {
            "post>                    uploaded(~/contacts,contact-service.conf), keys(contacts), bash_op(~/contacts,copious-contacts)": "one-line"
          }
        ]
      },
      {
        "?npm_target(*)>           installed(nodejs),installed(npm)": "one-line"
      },
      {
        "?compositing(*)>  -> Y    roller($[configs]/nginx,${Y})": "one-line"
      }
    ],
    "goal_map": {
      "running(nginx)": {
        "binder": {
          "v_list": {
            "Y": ""
          },
          "nginx,*": {
            "Y": {
              "v_type": "single",
              "form": "nginx,*",
              "ast": {
                "code": "(*,*(Y))|(*)=> Y = default | (*,Y)",
                "parts": [
                  {
                    "code": "*,*(Y)",
                    "parts": [
                      "*",
                      {
                        "code": "*(Y)",
                        "parts": [
                          "Y"
                        ],
                        "f_type": "call",
                        "vars": {
                          "Y": ""
                        }
                      }
                    ],
                    "vars": {
                      "Y": ""
                    },
                    "f_type": "list"
                  },
                  {
                    "code": "*",
                    "default": "default",
                    "vars": "Y",
                    "f_type": "value"
                  },
                  {
                    "code": "*,Y",
                    "parts": [
                      "*",
                      "Y"
                    ],
                    "vars": {
                      "Y": ""
                    },
                    "f_type": "list"
                  }
                ],
                "vars": {
                  "Y": ""
                },
                "f_type": "match"
              }
            }
          },
          "uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z )": {
            "type": "select",
            "selectors": {
              "Y": ""
            },
            "Z": [
              "${host.host}.conf",
              "default"
            ]
          }
        },
        "subgoals": {
          "pre": {
            "binder": {},
            "subgoals": {
              "apt_op(install nginx)": {
                "all_ready": false
              }
            },
            "all_ready": false
          },
          "post(Y:.conf)": {
            "binder": {
              "v_list": {
                "Y": ""
              },
              "nginx,*": {
                "Y": {
                  "v_type": "single",
                  "form": "nginx,*",
                  "ast": {
                    "code": "(*,*(Y))|(*)=> Y = default | (*,Y)",
                    "parts": [
                      {
                        "code": "*,*(Y)",
                        "parts": [
                          "*",
                          {
                            "code": "*(Y)",
                            "parts": [
                              "Y"
                            ],
                            "f_type": "call",
                            "vars": {
                              "Y": ""
                            }
                          }
                        ],
                        "vars": {
                          "Y": ""
                        },
                        "f_type": "list"
                      },
                      {
                        "code": "*",
                        "default": "default",
                        "vars": "Y",
                        "f_type": "value"
                      },
                      {
                        "code": "*,Y",
                        "parts": [
                          "*",
                          "Y"
                        ],
                        "vars": {
                          "Y": ""
                        },
                        "f_type": "list"
                      }
                    ],
                    "vars": {
                      "Y": ""
                    },
                    "f_type": "match"
                  }
                }
              },
              "uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z )": {
                "type": "select",
                "selectors": {
                  "Y": ""
                },
                "Z": [
                  "${host.host}.conf",
                  "default"
                ]
              }
            },
            "subgoals": {
              "uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z )": {
                "binder": {
                  "v_list": {
                    "Y": ""
                  },
                  "nginx,*": {
                    "Y": {
                      "v_type": "single",
                      "form": "nginx,*",
                      "ast": {
                        "code": "(*,*(Y))|(*)=> Y = default | (*,Y)",
                        "parts": [
                          {
                            "code": "*,*(Y)",
                            "parts": [
                              "*",
                              {
                                "code": "*(Y)",
                                "parts": [
                                  "Y"
                                ],
                                "f_type": "call",
                                "vars": {
                                  "Y": ""
                                }
                              }
                            ],
                            "vars": {
                              "Y": ""
                            },
                            "f_type": "list"
                          },
                          {
                            "code": "*",
                            "default": "default",
                            "vars": "Y",
                            "f_type": "value"
                          },
                          {
                            "code": "*,Y",
                            "parts": [
                              "*",
                              "Y"
                            ],
                            "vars": {
                              "Y": ""
                            },
                            "f_type": "list"
                          }
                        ],
                        "vars": {
                          "Y": ""
                        },
                        "f_type": "match"
                      }
                    }
                  },
                  "uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z )": {
                    "type": "select",
                    "selectors": {
                      "Y": ""
                    },
                    "Z": [
                      "${host.host}.conf",
                      "default"
                    ]
                  }
                },
                "subgoals": {},
                "all_ready": false
              },
              "nginx_op(-s reload)": {
                "binder": {
                  "v_list": {
                    "Y": ""
                  },
                  "nginx,*": {
                    "Y": {
                      "v_type": "single",
                      "form": "nginx,*",
                      "ast": {
                        "code": "(*,*(Y))|(*)=> Y = default | (*,Y)",
                        "parts": [
                          {
                            "code": "*,*(Y)",
                            "parts": [
                              "*",
                              {
                                "code": "*(Y)",
                                "parts": [
                                  "Y"
                                ],
                                "f_type": "call",
                                "vars": {
                                  "Y": ""
                                }
                              }
                            ],
                            "vars": {
                              "Y": ""
                            },
                            "f_type": "list"
                          },
                          {
                            "code": "*",
                            "default": "default",
                            "vars": "Y",
                            "f_type": "value"
                          },
                          {
                            "code": "*,Y",
                            "parts": [
                              "*",
                              "Y"
                            ],
                            "vars": {
                              "Y": ""
                            },
                            "f_type": "list"
                          }
                        ],
                        "vars": {
                          "Y": ""
                        },
                        "f_type": "match"
                      }
                    }
                  },
                  "uploaded($[nginx-e], /Y/? ${host.host}.conf | default -> Z )": {
                    "type": "select",
                    "selectors": {
                      "Y": ""
                    },
                    "Z": [
                      "${host.host}.conf",
                      "default"
                    ]
                  }
                },
                "subgoals": {},
                "all_ready": false
              }
            },
            "all_ready": false
          }
        },
        "all_ready": false
      },
      "running(human-page-queue)": {
        "binder": {
          "v_list": {
            "X": ""
          },
          "human-page-queue": {
            "X": {
              "v_type": "single",
              "form": "human-page-queue",
              "ast": "X"
            }
          }
        },
        "subgoals": {
          "pre": {
            "binder": {},
            "subgoals": {
              "npm_target(global:of-this-world)": {
                "binder": {},
                "subgoals": {
                  "installed(nodejs)": {
                    "all_ready": false
                  },
                  "installed(npm)": {
                    "all_ready": false
                  }
                },
                "params": "*",
                "all_ready": false
              }
            },
            "all_ready": false
          },
          "post(X:.conf)": {
            "binder": {
              "v_list": {
                "X": ""
              },
              "human-page-queue": {
                "X": {
                  "v_type": "single",
                  "form": "human-page-queue",
                  "ast": "X"
                }
              }
            },
            "subgoals": {
              "dirs(X)": {
                "binder": {
                  "v_list": {
                    "X": ""
                  },
                  "human-page-queue": {
                    "X": {
                      "v_type": "single",
                      "form": "human-page-queue",
                      "ast": "X"
                    }
                  }
                },
                "subgoals": {},
                "all_ready": false
              },
              "uploaded(~/, ${X}.conf )": {
                "binder": {
                  "v_list": {
                    "X": ""
                  },
                  "human-page-queue": {
                    "X": {
                      "v_type": "single",
                      "form": "human-page-queue",
                      "ast": "X"
                    }
                  }
                },
                "subgoals": {},
                "all_ready": false
              },
              "bash_op(~/,${X})": {
                "binder": {
                  "v_list": {
                    "X": ""
                  },
                  "human-page-queue": {
                    "X": {
                      "v_type": "single",
                      "form": "human-page-queue",
                      "ast": "X"
                    }
                  }
                },
                "subgoals": {},
                "all_ready": false
              }
            },
            "all_ready": false
          }
        },
        "all_ready": false
      },
      "running(of-this-world)": {
        "binder": {
          "v_list": {
            "X": ""
          },
          "of-this-world": {
            "X": {
              "v_type": "single",
              "form": "of-this-world",
              "ast": "X"
            }
          }
        },
        "subgoals": {
          "pre": {
            "binder": {},
            "subgoals": {
              "npm_target(global:of-this-world)": {
                "binder": {},
                "subgoals": {
                  "installed(nodejs)": {
                    "all_ready": false
                  },
                  "installed(npm)": {
                    "all_ready": false
                  }
                },
                "params": "*",
                "all_ready": false
              }
            },
            "all_ready": false
          },
          "post(X:.conf)": {
            "binder": {
              "v_list": {
                "X": ""
              },
              "of-this-world": {
                "X": {
                  "v_type": "single",
                  "form": "of-this-world",
                  "ast": "X"
                }
              }
            },
            "subgoals": {
              "dirs(X)": {
                "binder": {
                  "v_list": {
                    "X": ""
                  },
                  "of-this-world": {
                    "X": {
                      "v_type": "single",
                      "form": "of-this-world",
                      "ast": "X"
                    }
                  }
                },
                "subgoals": {},
                "all_ready": false
              },
              "uploaded(~/, ${X}.conf )": {
                "binder": {
                  "v_list": {
                    "X": ""
                  },
                  "of-this-world": {
                    "X": {
                      "v_type": "single",
                      "form": "of-this-world",
                      "ast": "X"
                    }
                  }
                },
                "subgoals": {},
                "all_ready": false
              },
              "bash_op(~/,${X})": {
                "binder": {
                  "v_list": {
                    "X": ""
                  },
                  "of-this-world": {
                    "X": {
                      "v_type": "single",
                      "form": "of-this-world",
                      "ast": "X"
                    }
                  }
                },
                "subgoals": {},
                "all_ready": false
              }
            },
            "all_ready": false
          }
        },
        "all_ready": false
      },
      "running(endpoint:contacts)": {
        "binder": {},
        "subgoals": {
          "pre": {
            "binder": {},
            "subgoals": {
              "npm_target(global:copious-endpoints)": {
                "binder": {},
                "subgoals": {
                  "installed(nodejs)": {
                    "all_ready": false
                  },
                  "installed(npm)": {
                    "all_ready": false
                  }
                },
                "params": "*",
                "all_ready": false
              }
            },
            "all_ready": false
          },
          "post": {
            "binder": {},
            "subgoals": {
              "uploaded(~/contacts,contact-service.conf)": {
                "all_ready": false
              },
              "keys(contacts)": {
                "all_ready": false
              },
              "bash_op(~/contacts,copious-contacts)": {
                "all_ready": false
              }
            },
            "all_ready": false
          }
        },
        "all_ready": false
      },
      "?npm_target(*)": {
        "binder": {},
        "subgoals": [
          "installed(nodejs)",
          "installed(npm)"
        ]
      },
      "?compositing(*)": {
        "binder": {
          "v_list": {
            "Y": ""
          },
          "*": {
            "Y": {
              "v_type": "single",
              "form": "*",
              "ast": "Y"
            }
          }
        },
        "subgoals": [
          "roller($[configs]/nginx,${Y})"
        ]
      }
    }
  }
}